apiVersion: v1
data:
  panel: "true"
kind: ConfigMap
metadata:
  name: template-example-pricing-vm-azure-card
  namespace: krateo-system
---
apiVersion: templates.krateo.io/v1alpha1
kind: Widget
metadata:
  name: template-example-pricing-vm-azure-card
  namespace: krateo-system
spec:
  actions:
  - template:
      apiVersion: templates.krateo.io/v1alpha1
      name: template-example-pricing-vm-azure-customform
      namespace: krateo-system
      resource: customforms
      verb: GET
  - template:
      apiVersion: core.krateo.io/v1alpha1
      name: finops-example-pricing-vm-azure
      namespace: krateo-system
      resource: compositiondefinitions
      verb: DELETE
  app:
    template:
      color: ${ .getCompositionDefinition.status.conditions[] | select(.type == "Ready") | if .status == "False" then "orange" elif .status == "True" then "green" else "grey" end }
      content: ${ .getPricingInformation | "Pricing information:\n \(to_entries | map(" - \(.key)\u003A \(.value)â‚¬") | join("\n "))" }
      icon: fa-cubes
      tags: example-pricing-vm-azure-system,0.1.0
      title: example-pricing-vm-azure
      status: ${ .getCompositionDefinition.status.conditions[] | select(.type == "Ready") | "Ready:" + .status }
      date: ${ .getCompositionDefinition.metadata.creationTimestamp }
  propsRef:
    name: template-example-pricing-vm-azure-card
    namespace: krateo-system
  type: card
  api:
  - name: getCompositionDefinition
    path: "/apis/core.krateo.io/v1alpha1/namespaces/krateo-system/compositiondefinitions/finopsexamplepricingvmazures"
    verb: GET
    headers:
    - 'Accept: application/json'
  - name: getPricingInformation
    endpointRef: 
      name: finops-database-handler-list
      namespace: krateo-system
    verb: POST
    dependOn: getCompositionDefinition
    payload: "{\"composition_id\": \"${ .getCompositionDefinition.metadata.uid }\"}"
    headers:
    - 'Accept: application/json'
    - 'Content-Type: application/json'
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: template-example-pricing-vm-azure-customform
  namespace: krateo-system
data:
  onSubmitId: submit
  onSubmitVerb: POST
  payloadFormKey: spec
---
apiVersion: templates.krateo.io/v1alpha1
kind: CustomForm
metadata:
  name: template-example-pricing-vm-azure-customform
  namespace: krateo-system
spec:
  type: customform
  propsRef:
    name: template-example-pricing-vm-azure-customform
    namespace: krateo-system
  actions:
    - template:
        id: submit
        apiVersion: composition.krateo.io/v0-1-0
        verb: POST
        resource: finopsexamplepricingvmazures
        payloadToOverride:
        - name: metadata.name
          value: ${ git.toRepo.name }
        - name: metadata.namespace
          value: ${ "example-pricing-vm-azure-system" }
  app:
    template:
      schema: ${ .getCRD | .spec.versions[] | select(.name == "v0-1-0") | .schema.openAPIV3Schema.properties.spec.properties }
  api:
  - name: getCRD
    path: "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/finopsexamplepricingvmazures.composition.krateo.io"
    verb: GET
    headers:
    - 'Accept: application/json'